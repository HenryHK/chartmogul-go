// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/chartmogul/chartmogul-go (interfaces: IApi)

package mock_chartmogul_go

import (
	chartmogul_go "github.com/chartmogul/chartmogul-go"
	gomock "github.com/golang/mock/gomock"
)

// Mock of IApi interface
type MockIApi struct {
	ctrl     *gomock.Controller
	recorder *_MockIApiRecorder
}

// Recorder for MockIApi (not exported)
type _MockIApiRecorder struct {
	mock *MockIApi
}

func NewMockIApi(ctrl *gomock.Controller) *MockIApi {
	mock := &MockIApi{ctrl: ctrl}
	mock.recorder = &_MockIApiRecorder{mock}
	return mock
}

func (_m *MockIApi) EXPECT() *_MockIApiRecorder {
	return _m.recorder
}

func (_m *MockIApi) EnrichmentAddCustomAttributesToCustomer(_param0 string, _param1 []*chartmogul_go.CustomAttribute) (*chartmogul_go.CustomAttributes, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentAddCustomAttributesToCustomer", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.CustomAttributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentAddCustomAttributesToCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentAddCustomAttributesToCustomer", arg0, arg1)
}

func (_m *MockIApi) EnrichmentAddCustomAttributesWithEmail(_param0 string, _param1 []*chartmogul_go.CustomAttribute) (*chartmogul_go.EnrichmentCustomers, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentAddCustomAttributesWithEmail", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.EnrichmentCustomers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentAddCustomAttributesWithEmail(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentAddCustomAttributesWithEmail", arg0, arg1)
}

func (_m *MockIApi) EnrichmentAddTagsToCustomer(_param0 string, _param1 []string) (*chartmogul_go.TagsResult, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentAddTagsToCustomer", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.TagsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentAddTagsToCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentAddTagsToCustomer", arg0, arg1)
}

func (_m *MockIApi) EnrichmentAddTagsToCustomersWithEmail(_param0 string, _param1 []string) (*chartmogul_go.EnrichmentCustomers, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentAddTagsToCustomersWithEmail", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.EnrichmentCustomers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentAddTagsToCustomersWithEmail(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentAddTagsToCustomersWithEmail", arg0, arg1)
}

func (_m *MockIApi) EnrichmentListCustomers(_param0 *chartmogul_go.EnrichmentListCustomersParams) (*chartmogul_go.EnrichmentCustomers, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentListCustomers", _param0)
	ret0, _ := ret[0].(*chartmogul_go.EnrichmentCustomers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentListCustomers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentListCustomers", arg0)
}

func (_m *MockIApi) EnrichmentMergeCustomers(_param0 *chartmogul_go.EnrichmentMergeCustomersParams) error {
	ret := _m.ctrl.Call(_m, "EnrichmentMergeCustomers", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIApiRecorder) EnrichmentMergeCustomers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentMergeCustomers", arg0)
}

func (_m *MockIApi) EnrichmentRemoveCustomAttributes(_param0 string, _param1 []string) (*chartmogul_go.CustomAttributes, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentRemoveCustomAttributes", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.CustomAttributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentRemoveCustomAttributes(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentRemoveCustomAttributes", arg0, arg1)
}

func (_m *MockIApi) EnrichmentRemoveTagsFromCustomer(_param0 string, _param1 []string) (*chartmogul_go.TagsResult, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentRemoveTagsFromCustomer", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.TagsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentRemoveTagsFromCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentRemoveTagsFromCustomer", arg0, arg1)
}

func (_m *MockIApi) EnrichmentRetrieveCustomer(_param0 string) (*chartmogul_go.EnrichmentCustomer, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentRetrieveCustomer", _param0)
	ret0, _ := ret[0].(*chartmogul_go.EnrichmentCustomer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentRetrieveCustomer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentRetrieveCustomer", arg0)
}

func (_m *MockIApi) EnrichmentRetrieveCustomersAttributes(_param0 string) (*chartmogul_go.AttributesResult, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentRetrieveCustomersAttributes", _param0)
	ret0, _ := ret[0].(*chartmogul_go.AttributesResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentRetrieveCustomersAttributes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentRetrieveCustomersAttributes", arg0)
}

func (_m *MockIApi) EnrichmentSearchCustomers(_param0 *chartmogul_go.EnrichmentSearchCustomersParams) (*chartmogul_go.EnrichmentCustomers, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentSearchCustomers", _param0)
	ret0, _ := ret[0].(*chartmogul_go.EnrichmentCustomers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentSearchCustomers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentSearchCustomers", arg0)
}

func (_m *MockIApi) EnrichmentUpdateCustomAttributesOfCustomer(_param0 string, _param1 map[string]interface{}) (*chartmogul_go.CustomAttributes, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentUpdateCustomAttributesOfCustomer", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.CustomAttributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentUpdateCustomAttributesOfCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentUpdateCustomAttributesOfCustomer", arg0, arg1)
}

func (_m *MockIApi) EnrichmentUpdateCustomer(_param0 *chartmogul_go.EnrichmentCustomer, _param1 string) (*chartmogul_go.EnrichmentCustomer, error) {
	ret := _m.ctrl.Call(_m, "EnrichmentUpdateCustomer", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.EnrichmentCustomer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) EnrichmentUpdateCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnrichmentUpdateCustomer", arg0, arg1)
}

func (_m *MockIApi) ImportCancelSubscription(_param0 string, _param1 string) (*chartmogul_go.Subscription, error) {
	ret := _m.ctrl.Call(_m, "ImportCancelSubscription", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Subscription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportCancelSubscription(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportCancelSubscription", arg0, arg1)
}

func (_m *MockIApi) ImportCreateCustomer(_param0 *chartmogul_go.Customer, _param1 string) (*chartmogul_go.Customer, error) {
	ret := _m.ctrl.Call(_m, "ImportCreateCustomer", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportCreateCustomer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportCreateCustomer", arg0, arg1)
}

func (_m *MockIApi) ImportCreateDataSource(_param0 string) (*chartmogul_go.DataSource, error) {
	ret := _m.ctrl.Call(_m, "ImportCreateDataSource", _param0)
	ret0, _ := ret[0].(*chartmogul_go.DataSource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportCreateDataSource(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportCreateDataSource", arg0)
}

func (_m *MockIApi) ImportCreateInvoices(_param0 []*chartmogul_go.Invoice, _param1 string) (*chartmogul_go.Invoices, error) {
	ret := _m.ctrl.Call(_m, "ImportCreateInvoices", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Invoices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportCreateInvoices(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportCreateInvoices", arg0, arg1)
}

func (_m *MockIApi) ImportCreatePlan(_param0 *chartmogul_go.Plan, _param1 string) (*chartmogul_go.Plan, error) {
	ret := _m.ctrl.Call(_m, "ImportCreatePlan", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Plan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportCreatePlan(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportCreatePlan", arg0, arg1)
}

func (_m *MockIApi) ImportCreateTransaction(_param0 *chartmogul_go.Transaction, _param1 string) (*chartmogul_go.Transaction, error) {
	ret := _m.ctrl.Call(_m, "ImportCreateTransaction", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportCreateTransaction(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportCreateTransaction", arg0, arg1)
}

func (_m *MockIApi) ImportDeleteCustomer(_param0 string) error {
	ret := _m.ctrl.Call(_m, "ImportDeleteCustomer", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIApiRecorder) ImportDeleteCustomer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportDeleteCustomer", arg0)
}

func (_m *MockIApi) ImportDeleteDataSource(_param0 string) error {
	ret := _m.ctrl.Call(_m, "ImportDeleteDataSource", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIApiRecorder) ImportDeleteDataSource(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportDeleteDataSource", arg0)
}

func (_m *MockIApi) ImportListCustomers(_param0 *chartmogul_go.ImportListCustomersParams) (*chartmogul_go.Customers, error) {
	ret := _m.ctrl.Call(_m, "ImportListCustomers", _param0)
	ret0, _ := ret[0].(*chartmogul_go.Customers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportListCustomers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportListCustomers", arg0)
}

func (_m *MockIApi) ImportListDataSources() (*chartmogul_go.DataSources, error) {
	ret := _m.ctrl.Call(_m, "ImportListDataSources")
	ret0, _ := ret[0].(*chartmogul_go.DataSources)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportListDataSources() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportListDataSources")
}

func (_m *MockIApi) ImportListInvoices(_param0 *chartmogul_go.Cursor, _param1 string) (*chartmogul_go.Invoices, error) {
	ret := _m.ctrl.Call(_m, "ImportListInvoices", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Invoices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportListInvoices(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportListInvoices", arg0, arg1)
}

func (_m *MockIApi) ImportListPlans(_param0 *chartmogul_go.ListPlansParams) (*chartmogul_go.Plans, error) {
	ret := _m.ctrl.Call(_m, "ImportListPlans", _param0)
	ret0, _ := ret[0].(*chartmogul_go.Plans)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportListPlans(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportListPlans", arg0)
}

func (_m *MockIApi) ImportListSubscriptions(_param0 *chartmogul_go.Cursor, _param1 string) (*chartmogul_go.Subscriptions, error) {
	ret := _m.ctrl.Call(_m, "ImportListSubscriptions", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.Subscriptions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) ImportListSubscriptions(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ImportListSubscriptions", arg0, arg1)
}

func (_m *MockIApi) MetricsListActivities(_param0 *chartmogul_go.Cursor, _param1 string) (*chartmogul_go.MetricsActivities, error) {
	ret := _m.ctrl.Call(_m, "MetricsListActivities", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.MetricsActivities)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsListActivities(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsListActivities", arg0, arg1)
}

func (_m *MockIApi) MetricsListSubscriptions(_param0 *chartmogul_go.Cursor, _param1 string) (*chartmogul_go.MetricsSubscriptions, error) {
	ret := _m.ctrl.Call(_m, "MetricsListSubscriptions", _param0, _param1)
	ret0, _ := ret[0].(*chartmogul_go.MetricsSubscriptions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsListSubscriptions(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsListSubscriptions", arg0, arg1)
}

func (_m *MockIApi) MetricsRetrieveARPA(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.ARPAResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveARPA", _param0)
	ret0, _ := ret[0].(*chartmogul_go.ARPAResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveARPA(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveARPA", arg0)
}

func (_m *MockIApi) MetricsRetrieveARR(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.ARRResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveARR", _param0)
	ret0, _ := ret[0].(*chartmogul_go.ARRResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveARR(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveARR", arg0)
}

func (_m *MockIApi) MetricsRetrieveASP(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.ASPResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveASP", _param0)
	ret0, _ := ret[0].(*chartmogul_go.ASPResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveASP(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveASP", arg0)
}

func (_m *MockIApi) MetricsRetrieveAll(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.MetricsResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveAll", _param0)
	ret0, _ := ret[0].(*chartmogul_go.MetricsResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveAll(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveAll", arg0)
}

func (_m *MockIApi) MetricsRetrieveCustomerChurnRate(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.CustomerChurnRateResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveCustomerChurnRate", _param0)
	ret0, _ := ret[0].(*chartmogul_go.CustomerChurnRateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveCustomerChurnRate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveCustomerChurnRate", arg0)
}

func (_m *MockIApi) MetricsRetrieveCustomerCount(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.CustomerCountResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveCustomerCount", _param0)
	ret0, _ := ret[0].(*chartmogul_go.CustomerCountResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveCustomerCount(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveCustomerCount", arg0)
}

func (_m *MockIApi) MetricsRetrieveLTV(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.LTVResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveLTV", _param0)
	ret0, _ := ret[0].(*chartmogul_go.LTVResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveLTV(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveLTV", arg0)
}

func (_m *MockIApi) MetricsRetrieveMRR(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.MRRResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveMRR", _param0)
	ret0, _ := ret[0].(*chartmogul_go.MRRResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveMRR(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveMRR", arg0)
}

func (_m *MockIApi) MetricsRetrieveMRRChurnRate(_param0 *chartmogul_go.MetricsFilter) (*chartmogul_go.MRRChurnRateResult, error) {
	ret := _m.ctrl.Call(_m, "MetricsRetrieveMRRChurnRate", _param0)
	ret0, _ := ret[0].(*chartmogul_go.MRRChurnRateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) MetricsRetrieveMRRChurnRate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MetricsRetrieveMRRChurnRate", arg0)
}

func (_m *MockIApi) Ping() (bool, error) {
	ret := _m.ctrl.Call(_m, "Ping")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIApiRecorder) Ping() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Ping")
}
